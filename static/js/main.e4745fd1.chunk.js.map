{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/counter.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Counter","state","count","tags","className","this","getBadgeClasses","formatCount","map","tag","classes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,I,MCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCyBCQ,E,4MA9BXC,MAAM,CACFC,MAAM,EACNC,KAAM,CAAC,OAAO,OAAO,S,uDAGrB,OACA,gCACI,sBAAMC,UAAWC,KAAKC,kBAAtB,SAA0CD,KAAKE,gBAC/C,wBAAQH,UAAU,2BAAlB,uBACA,6BACKC,KAAKJ,MAAME,KAAKK,KAAI,SAAAC,GAAG,OAAG,6BAAeA,GAANA,a,wCAO5C,IAAIC,EAAU,mBAEd,OADAA,GAAiC,IAArBL,KAAKJ,MAAMC,MAAe,UAAY,Y,oCAIvC,IACJA,EAAQG,KAAKJ,MAAbC,MACP,OAAe,IAARA,EAAY,OAAQA,M,GAzBbS,aCQtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.e4745fd1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from 'react';\nclass Counter extends Component{\n    state={\n        count:0,\n        tags: ['tag1','tag2','tag3']\n    };\n    render(){\n        return (\n        <div> \n            <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n            <button className=\"btn btn-secondary btn-sm\">Increment</button>\n            <ul>\n                {this.state.tags.map(tag=> <li key={tag}>{tag}</li>)}\n            </ul>\n        </div>);\n    }\n\n    getBadgeClasses() {\n        //if it's is constant we use \"const\", else if we should modify it, we use \"let\"\n        let classes = \"badge m-2 badge-\";\n        classes += (this.state.count === 0) ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n    formatCount() {\n        const {count}= this.state;\n        return count===0 ? \"Zero\": count;\n    }\n}\n\n\n\nexport default Counter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Counter from './components/counter';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Counter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}